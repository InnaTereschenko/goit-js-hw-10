{"mappings":"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","sources":["src/cat-api.js","node_modules/slim-select/dist/slimselect.umd.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://api.thecatapi.com/v1/breeds';\n\nconst API_KEY =\n  'live_55cxcACp5QMgUJMKFsfZJUTm6HHeZI9SSpnqHcQLBEEW2Nv3hL8pb6MSWOcBFh0s';\n\nfunction fetchBreeds(BASE_URL) {\n  return fetch('https://api.thecatapi.com/v1/breeds')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      //   console.log(response);\n      return response.json();\n    })\n    .then(data =>\n      data.map(breed => ({\n        id: breed.id,\n        name: breed.name,\n      }))\n    )\n    .catch(error => {\n      iziToast.error({\n        messageColor: '#000080',\n        backgroundColor: '#FF0000',\n        messageSize: 'large',\n        position: 'topLeft',\n        title: 'Error',\n        message: 'Oops! Something went wrong! Try reloading the page!',\n      });\n      console.error('Помилка при отриманні списку порід:', error);\n      throw error;\n    });\n}\n\nexport default { fetchBreeds, fetchCatByBreed };\n\nfunction fetchCatByBreed(breedId) {\n  const URL = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}&api_key=${API_KEY}`;\n  return fetch(URL)\n    .then(response => {\n      return response.json();\n      \n    })\n    .then(data => {\n      return data[0];\n    });\n}\n\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        this.callbacks.setSelected([''], false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n            this.updateDeselectAll();\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = 'Select All';\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                this.callbacks.setSelected(newSelected, true);\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.select.addEventListener('change', this.valueChange.bind(this), {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange.bind(this));\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n","import './css/style.css';\nimport API from './cat-api';\nimport SlimSelect from 'slim-select';\n\n// import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst refs = {\n  breedSelect: document.querySelector('.breed-select'),\n  loader: document.querySelector('.loader'),\n  error: document.querySelector('.error'),\n  divCatInfo: document.querySelector('.cat-info'),\n  catImage: document.getElementById('cat-image'),\n  breedName: document.getElementById('breed-name'),\n  breedDescription: document.getElementById('breed-description'),\n  breedTemperament: document.getElementById('breed-temperament'),\n};\nconsole.log(API);\n\n\n// підключити бібл селекту\n\nnew SlimSelect({\n  select: 'refs.breedSelect'\n});\n\n\nAPI.fetchBreeds().then(breeds => {\n  breeds.forEach(breed => {\n    const option = document.createElement('option');\n    option.value = breed.id;\n    option.textContent = breed.name;\n    refs.breedSelect.appendChild(option);\n   \n  });\n});\n\nrefs.breedSelect.addEventListener('change', onChange);\n\nfunction onChange(evt) {\n  evt.preventDefault();\n  const selectBreedId = refs.breedSelect.value;\n  showLoader();\n  hideError();\n  hideCatInfo();\n\n  API.fetchCatByBreed(selectBreedId)\n    .then(renderBreedCard)\n    .catch(onFetchError)\n    .finally(() => {\n      refs.breedSelect.reset;\n      hideLoader();\n    });\n}\n\nfunction renderBreedCard(catData) {\n  const { url, breeds } = catData;\n\n  const markup = `\n              <img src='${url}' alt='${breeds[0].name}' width=300>\n              <div><h2>${breeds[0].name}</h2>\n              <p>${breeds[0].description}</p>\n              <p><span>Temperament:</span> ${breeds[0].temperament}</p></div>\n            `;\n\n  refs.divCatInfo.innerHTML = markup;\n  refs.divCatInfo.classList.add('catCard');\n  showCatInfo();\n}\n\nfunction onFetchError() {\n  iziToast.error({\n    messageColor: '#000080',\n    backgroundColor: '#FF0000',\n    messageSize: 'large',\n    position: 'topLeft',\n    title: 'Error',\n    message: 'Oops! Something went wrong! Try reloading the page!',\n  });\n  console.error('Помилка при отриманні інформації про кота:', error);\n  throw error;\n}\n\nfunction showLoader() {\n  refs.loader.style.display = 'block';\n  iziToast.warning({\n    messageColor: '#000080',\n    backgroundColor: '\t#FFD700',\n    messageSize: 'large',\n    timeout: 900,\n    position: 'topLeft',\n    pauseOnHover: true,\n    title: 'Caution',\n    message: 'Loading data, please wait...',\n  });\n}\n\nfunction hideLoader() {\n  refs.loader.style.display = 'none';\n}\n\nfunction showError() {\n  refs.error.style.display = 'block';\n}\n\nfunction hideError() {\n  refs.error.style.display = 'none';\n}\n\nfunction showCatInfo() {\n  refs.divCatInfo.style.display = 'flex';\n}\n\nfunction hideCatInfo() {\n  refs.divCatInfo.style.display = 'none';\n}\n"],"names":["$6b5f202d1456c0af$export$2e2bcd8739ae039","BASE_URL","fetch","then","response","ok","Error","status","json","data","map","breed","id","name","catch","error","iziToast","messageColor","backgroundColor","messageSize","position","title","message","console","breedId","$f753f16ae3da2a89$exports","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","parentByClass","document","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Settings","constructor","settings","this","style","class","isMultiple","isOpen","isFullOpen","intervalMove","disabled","undefined","alwaysOpen","showSearch","searchPlaceholder","searchText","searchingText","searchHighlight","closeOnSelect","contentLocation","body","contentPosition","openPosition","placeholderText","allowDeselect","hideSelected","showOptionTooltips","minSelected","maxSelected","timeoutDelay","maxValuesShown","maxValuesMessage","Optgroup","optgroup","label","selectAll","closable","options","o","push","Option","option","value","text","html","selected","display","mandatory","placeholder","Store","validateDataArray","Array","isArray","dataObj","validateOption","partialToFullData","dataFinal","forEach","optOptions","length","setData","selectType","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","search","searchFilter","trim","includeOptgroup","dataSearch","getSelectType","type","Render","enable","main","remove","classes","content","input","disable","add","open","arrow","path","setAttribute","arrowOpen","openAbove","openBelow","moveContent","store","selectedId","selectedOption","list","querySelector","ensureElementInView","close","arrowClose","updateClassStyles","removeAttribute","cssText","updateAriaAttributes","role","mainDiv","_a","createElement","tabIndex","onkeydown","key","callbacks","highlight","highlighted","click","onclick","values","appendChild","deselect","hide","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","afterChange","deselectSvg","createElementNS","deselectPath","arrowPath","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","innerHTML","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","single","innerText","outerHTML","currentNodes","childNodes","max","textContent","removeNodes","i","node","getAttribute","n","valueOut","hasChildNodes","removeChild","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","valueText","deleteDiv","valueDelete","preventDefault","deleteSvg","deletePath","optionDelete","contentDiv","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","addable","searchReturn","readOnly","oninput","target","ctrlKey","plus","plusPath","addablePath","inputValue","runFinish","oo","newOption","addableValue","Promise","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","optgroupLabel","selectOption","selectParent","renderError","errorDiv","renderSearching","searchingDiv","searching","renderOptions","noResults","optgroupEl","optgroupLabelText","optgroupActions","optgroupSelectAll","allSelected","o1","selectAllText","selectAllSvg","selectAllBox","optgroupSelectAllBox","selectAllCheck","optgroupSelectAllCheck","addEventListener","currentSelected","newSelected","s","optgroupClosable","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","highlightText","searchHighlighter","currentTarget","elementID","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","Select","select","hideUI","showUI","changeListen","listen","observer","observe","subtree","childList","attributes","disconnect","valueChange","ev","onValueChange","getSelectedValues","observeCall","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","info","optionClass","Object","keys","removeEventListener","bind","passive","MutationObserver","SlimSelect","render","err","events","dataClean","runAfterChange","beforeOpen","afterOpen","clearInterval","setInterval","beforeClose","afterClose","searchResp","documentClick","windowResize","windowScroll","windowVisibilityChange","config","indexOf","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","factory","$1f0dc3b9307be026$var$refs","breedSelect","loader","divCatInfo","catImage","getElementById","breedName","breedDescription","breedTemperament","$1f0dc3b9307be026$var$renderBreedCard","catData","url","breeds","markup","description","temperament","$1f0dc3b9307be026$var$onFetchError","log","$parcel$interopDefault","fetchBreeds","evt","selectBreedId","warning","pauseOnHover","fetchCatByBreed","finally","reset"],"version":3,"file":"index.9cf3c721.js.map"}